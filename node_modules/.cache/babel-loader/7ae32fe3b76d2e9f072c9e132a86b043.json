{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bvanbeynum/workout/client/src/components/WorkoutActivity.jsx\";\n// eslint-disable-next-line\n\n/* global fetch */\nimport React from \"react\";\nimport \"./workoutactivity.css\";\nimport loadingImage from \"../media/loading.gif\";\n\nclass WorkoutActivity extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.completeSet = setIndex => event => {\n      this.setState(({\n        workout\n      }) => ({\n        workout: { ...workout,\n          sets: [...workout.sets.slice(0, setIndex), { ...workout.sets[setIndex],\n            isComplete: true\n          }, ...workout.sets.slice(setIndex + 1)]\n        }\n      }));\n    };\n\n    this.editReps = (setIndex, newReps) => {\n      this.setState(({\n        workout\n      }) => ({\n        workout: { ...workout,\n          sets: [...workout.sets.slice(0, setIndex), { ...workout.sets[setIndex],\n            reps: newReps\n          }, ...workout.sets.slice(setIndex + 1)]\n        }\n      }));\n    };\n\n    this.editWeight = (setIndex, weight) => {\n      const newTotal = this.state.workout.sets[setIndex].weight + (this.state.workout.sets[setIndex][\"has\" + weight] ? weight * 2 * -1 : weight * 2);\n      this.setState(({\n        workout\n      }) => ({\n        workout: { ...workout,\n          sets: [...workout.sets.slice(0, setIndex), { ...workout.sets[setIndex],\n            ...this.getWeights(newTotal, workout.sets[setIndex].exercise),\n            weight: newTotal\n          }, ...workout.sets.slice(setIndex + 1)]\n        }\n      }));\n    };\n\n    this.getWeights = (totalWeight, exercise) => {\n      let weights = {};\n      totalWeight -= exercise.hasBar ? 45 : 0;\n      weights.has45 = totalWeight >= 45 * 2;\n      totalWeight -= totalWeight >= 45 * 2 ? 45 * 2 : 0;\n      weights.has25 = totalWeight >= 25 * 2;\n      totalWeight -= totalWeight >= 25 * 2 ? 25 * 2 : 0;\n      weights.has10 = totalWeight >= 10 * 2;\n      totalWeight -= totalWeight >= 10 * 2 ? 10 * 2 : 0;\n      weights.has5 = totalWeight >= 5 * 2;\n      totalWeight -= totalWeight >= 5 * 2 ? 5 * 2 : 0;\n      weights[\"has2.5\"] = totalWeight >= 2.5 * 2;\n      totalWeight -= totalWeight >= 2.5 * 2 ? 2.5 * 2 : 0;\n      return weights;\n    };\n\n    this.state = {\n      isLoading: true,\n      workout: {\n        id: this.props.workoutId\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://workout.beynum.com/workout/api/activityload?id=\" + this.state.workout.id, {\n      credentials: \"include\"\n    }).then(response => response.json()).then(data => {\n      const workout = data.workout;\n      workout.sets = workout.sets.map(workoutSet => {\n        const graphDates = [...new Set(workoutSet.exercise.activities.map(activity => +new Date(activity.runDateOnly)))];\n        return { ...workoutSet,\n          ...this.getWeights(workoutSet.exercise.maxWeight, workoutSet.exercise),\n          reps: workoutSet.exercise.maxReps,\n          weight: workoutSet.exercise.maxWeight,\n          graph: {\n            days: graphDates.map((date, dateIndex) => ({\n              date: new Date(date).getMonth() + 1 + \"/\" + new Date(date).getDate(),\n              oneRepMax: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.oneRepMax).sort((activityA, activityB) => activityB - activityA)[0],\n              setWeights: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.weight),\n              setReps: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.reps)\n            }))\n          }\n        };\n      });\n      workout.sets = workout.sets.map(workoutSet => {\n        const graphSize = {\n          width: 350,\n          height: 200,\n          barY: 150,\n          weightHeight: 45,\n          repHeight: 100\n        },\n              dayWidth = graphSize.width / workoutSet.graph.days.length,\n              barWidth = 5;\n        const oneRepMax = {};\n        oneRepMax.minValue = Math.min(...workoutSet.graph.days.map(date => date.oneRepMax));\n        oneRepMax.maxValue = Math.max(...workoutSet.graph.days.map(date => date.oneRepMax));\n        oneRepMax.minGraph = oneRepMax.minValue - oneRepMax.minValue * .2;\n        oneRepMax.maxGraph = oneRepMax.maxValue + oneRepMax.maxValue * .05;\n        oneRepMax.valueHeight = oneRepMax.maxGraph - oneRepMax.minGraph;\n        const oneRepMaxPath = workoutSet.graph.days.map((day, dayIndex) => {\n          const pointX = dayWidth * dayIndex,\n                pointY = (oneRepMax.maxGraph - day.oneRepMax) * graphSize.height / oneRepMax.valueHeight;\n          let path = \"\";\n\n          if (dayIndex === 0) {\n            path = \"M0,\";\n          } else if (dayIndex === workoutSet.graph.days.length - 1) {\n            path = \"L\" + graphSize.width + \",\";\n          } else {\n            path = \"L\" + (pointX + dayWidth / 2) + \",\";\n          }\n\n          path += pointY;\n          return path;\n        }).join(\" \");\n        const bars = {};\n        bars.weight = {};\n        bars.weight.minValue = Math.min(...workoutSet.graph.days.flatMap(day => day.setWeights));\n        bars.weight.maxValue = Math.max(...workoutSet.graph.days.flatMap(day => day.setWeights));\n        bars.weight.valueHeight = bars.weight.maxValue - bars.weight.minValue;\n        const weightBars = workoutSet.graph.days.map((day, dayIndex) => ({\n          weights: day.setWeights.map((weight, weightIndex) => {\n            const xLeft = dayWidth * dayIndex + dayWidth / 2 - barWidth * 3,\n                  barX = xLeft + barWidth * weightIndex,\n                  barHeight = weight * graphSize.weightHeight / bars.weight.maxValue;\n            return \"M\" + barX + \",\" + graphSize.barY + \" L\" + (barX + barWidth) + \",\" + graphSize.barY + \" L\" + (barX + barWidth) + \",\" + (graphSize.barY + barHeight) + \" C\" + (barX + barWidth) + \",\" + (graphSize.barY + barHeight + 8) + \" \" + barX + \",\" + (graphSize.barY + barHeight + 8) + \" \" + barX + \",\" + (graphSize.barY + barHeight);\n          })\n        })).flatMap(day => day.weights);\n        bars.reps = {};\n        bars.reps.minValue = Math.min(...workoutSet.graph.days.flatMap(day => day.setReps));\n        bars.reps.maxValue = Math.max(...workoutSet.graph.days.flatMap(day => day.setReps));\n        bars.reps.valueHeight = bars.reps.maxValue - bars.reps.minValue;\n        const repBars = workoutSet.graph.days.map((day, dayIndex) => ({\n          reps: day.setReps.map((rep, repIndex) => {\n            const xLeft = dayWidth * dayIndex + dayWidth / 2 - barWidth * 3,\n                  barX = xLeft + barWidth * repIndex,\n                  barHeight = rep * graphSize.repHeight / bars.reps.maxValue;\n            return \"M\" + barX + \",\" + graphSize.barY + (workoutSet.exercise.hasWeight ? \" L\" + (barX + barWidth) + \",\" + graphSize.barY : \" C\" + barX + \",\" + (graphSize.barY + 3) + \" \" + (barX + barWidth) + \",\" + (graphSize.barY + 3) + \" \" + (barX + barWidth) + \",\" + graphSize.barY) + \" L\" + (barX + barWidth) + \",\" + (graphSize.barY - barHeight) + \" C\" + (barX + barWidth) + \",\" + (graphSize.barY - barHeight - 3) + \" \" + barX + \",\" + (graphSize.barY - barHeight - 3) + \" \" + barX + \",\" + (graphSize.barY - barHeight);\n          })\n        })).flatMap(day => day.reps);\n        return { ...workoutSet,\n          graph: { ...workoutSet.graph,\n            weightBars: workoutSet.exercise.hasWeight ? weightBars : [],\n            repBars: repBars,\n            oneRepMaxPath: workoutSet.exercise.hasWeight ? oneRepMaxPath : \"\",\n            oneRepMaxPathFill: workoutSet.exercise.hasWeight ? oneRepMaxPath + \" L\" + graphSize.width + \",\" + graphSize.height + \" L0,\" + graphSize.height : \"\"\n          }\n        };\n      });\n      this.setState({\n        workout: workout,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Loading\",\n          src: loadingImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Workout \", this.state.workout.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setsContainer\",\n          children: this.state.workout.sets.map((workoutSet, setIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setHeader\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setNameContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"header\",\n                    children: workoutSet.exercise.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"subHeader\",\n                    children: workoutSet.exercise.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setNumberContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: setIndex + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: this.state.workout.sets.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setDataContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horizontalContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dataButton\",\n                    onClick: () => this.editReps(setIndex, workoutSet.reps - 1),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dataValue\",\n                    children: workoutSet.reps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dataButton\",\n                    onClick: () => this.editReps(setIndex, workoutSet.reps + 1),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 10\n                }, this), workoutSet.exercise.hasWeight ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horizontalContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has2.5\"] ? \"active\" : \"\"}`,\n                    onClick: () => this.editWeight(setIndex, 2.5),\n                    children: \"2.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has5\"] ? \"active\" : \"\"}`,\n                    onClick: () => this.editWeight(setIndex, 5),\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has10\"] ? \"active\" : \"\"}`,\n                    onClick: () => this.editWeight(setIndex, 10),\n                    children: \"10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has25\"] ? \"active\" : \"\"}`,\n                    children: \"25\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has35\"] ? \"active\" : \"\"}`,\n                    children: \"35\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `weightButton ${workoutSet[\"has45\"] ? \"active\" : \"\"}`,\n                    children: \"45\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 10\n                }, this) : \"\", workoutSet.exercise.hasWeight ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horizontalContainer\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"subHeader\",\n                    children: [workoutSet.weight, \" lbs\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 10\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"graphContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  viewBox: \"0 0 350 200\",\n                  className: \"workoutGraph\",\n                  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                    children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                      spreadMethod: \"pad\",\n                      id: \"oneRepMaxGradient\",\n                      x1: \"0%\",\n                      y1: \"100%\",\n                      x2: \"0%\",\n                      y2: \"0%\",\n                      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                        offset: \"0%\",\n                        style: {\n                          stopColor: \"rgb(255, 255, 255)\",\n                          stopOpacity: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                        offset: \"100%\",\n                        style: {\n                          stopColor: \"rgb(202 236 251)\",\n                          stopOpacity: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"stroke\",\n                      d: workoutSet.graph.oneRepMaxPath\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"fill\",\n                      d: workoutSet.graph.oneRepMaxPathFill,\n                      fill: \"url(#oneRepMaxGradient)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: workoutSet.graph.weightBars.map((path, barIndex) => /*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"weightBar\",\n                      d: path\n                    }, barIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 12\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: workoutSet.graph.repBars.map((path, barIndex) => /*#__PURE__*/_jsxDEV(\"path\", {\n                      className: \"repBar\",\n                      d: path\n                    }, barIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 12\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"actionContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setActionButton\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setActionButton\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M8 5v14l11-7z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"setActionButton\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addButton\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 8\n            }, this)]\n          }, setIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default WorkoutActivity;","map":{"version":3,"sources":["/home/bvanbeynum/workout/client/src/components/WorkoutActivity.jsx"],"names":["React","loadingImage","WorkoutActivity","Component","constructor","props","completeSet","setIndex","event","setState","workout","sets","slice","isComplete","editReps","newReps","reps","editWeight","weight","newTotal","state","getWeights","exercise","totalWeight","weights","hasBar","has45","has25","has10","has5","isLoading","id","workoutId","componentDidMount","fetch","credentials","then","response","json","data","map","workoutSet","graphDates","Set","activities","activity","Date","runDateOnly","maxWeight","maxReps","graph","days","date","dateIndex","getMonth","getDate","oneRepMax","filter","sort","activityA","activityB","setWeights","setReps","graphSize","width","height","barY","weightHeight","repHeight","dayWidth","length","barWidth","minValue","Math","min","maxValue","max","minGraph","maxGraph","valueHeight","oneRepMaxPath","day","dayIndex","pointX","pointY","path","join","bars","flatMap","weightBars","weightIndex","xLeft","barX","barHeight","repBars","rep","repIndex","hasWeight","oneRepMaxPathFill","render","name","display","category","stopColor","stopOpacity","barIndex"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\n/* global fetch */\n\nimport React from \"react\";\nimport \"./workoutactivity.css\";\nimport loadingImage from \"../media/loading.gif\";\n\nclass WorkoutActivity extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tworkout: { id: this.props.workoutId }\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\t\n\t\tfetch(\"http://workout.beynum.com/workout/api/activityload?id=\" + this.state.workout.id, { credentials: \"include\" })\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst workout = data.workout;\n\t\t\t\t\n\t\t\t\tworkout.sets = workout.sets.map(workoutSet => {\n\t\t\t\t\tconst graphDates = [...new Set(workoutSet.exercise.activities.map(activity => +(new Date(activity.runDateOnly))))];\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...workoutSet,\n\t\t\t\t\t\t...this.getWeights(workoutSet.exercise.maxWeight, workoutSet.exercise),\n\t\t\t\t\t\treps: workoutSet.exercise.maxReps,\n\t\t\t\t\t\tweight: workoutSet.exercise.maxWeight,\n\t\t\t\t\t\tgraph: {\n\t\t\t\t\t\t\tdays: graphDates.map((date, dateIndex) => ({\n\t\t\t\t\t\t\t\tdate: ((new Date(date)).getMonth() + 1) + \"/\" + (new Date(date)).getDate(),\n\t\t\t\t\t\t\t\toneRepMax: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.oneRepMax)\n\t\t\t\t\t\t\t\t\t.sort((activityA, activityB) => activityB - activityA)[0],\n\t\t\t\t\t\t\t\tsetWeights: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.weight),\n\t\t\t\t\t\t\t\tsetReps: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.reps)\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tworkout.sets = workout.sets.map(workoutSet => {\n\t\t\t\t\tconst graphSize = { width: 350, height: 200, barY: 150, weightHeight: 45, repHeight: 100 },\n\t\t\t\t\t\tdayWidth = graphSize.width / workoutSet.graph.days.length,\n\t\t\t\t\t\tbarWidth = 5;\n\t\t\t\t\t\n\t\t\t\t\tconst oneRepMax = {};\n\t\t\t\t\toneRepMax.minValue = Math.min(...workoutSet.graph.days.map(date => date.oneRepMax));\n\t\t\t\t\toneRepMax.maxValue = Math.max(...workoutSet.graph.days.map(date => date.oneRepMax));\n\t\t\t\t\toneRepMax.minGraph = oneRepMax.minValue - (oneRepMax.minValue * .2);\n\t\t\t\t\toneRepMax.maxGraph = oneRepMax.maxValue + (oneRepMax.maxValue * .05);\n\t\t\t\t\toneRepMax.valueHeight = oneRepMax.maxGraph - oneRepMax.minGraph;\n\t\t\t\t\t\n\t\t\t\t\tconst oneRepMaxPath = workoutSet.graph.days.map((day, dayIndex) => {\n\t\t\t\t\t\tconst pointX = (dayWidth * dayIndex),\n\t\t\t\t\t\t\tpointY = ((oneRepMax.maxGraph - day.oneRepMax) * graphSize.height) / oneRepMax.valueHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet path = \"\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (dayIndex === 0) {\n\t\t\t\t\t\t\tpath = \"M0,\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (dayIndex === workoutSet.graph.days.length - 1) {\n\t\t\t\t\t\t\tpath = \"L\" + graphSize.width + \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpath = \"L\" + (pointX + (dayWidth / 2)) + \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tpath += pointY;\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}).join(\" \");\n\t\t\t\t\t\n\t\t\t\t\tconst bars = {};\n\t\t\t\t\t\n\t\t\t\t\tbars.weight = {};\n\t\t\t\t\tbars.weight.minValue = Math.min(...workoutSet.graph.days.flatMap(day => day.setWeights));\n\t\t\t\t\tbars.weight.maxValue = Math.max(...workoutSet.graph.days.flatMap(day => day.setWeights));\n\t\t\t\t\tbars.weight.valueHeight = bars.weight.maxValue - bars.weight.minValue;\n\t\t\t\t\t\n\t\t\t\t\tconst weightBars = workoutSet.graph.days.map((day, dayIndex) => ({\n\t\t\t\t\t\tweights: day.setWeights.map((weight, weightIndex) => {\n\t\t\t\t\t\t\tconst xLeft = ((dayWidth * dayIndex) + (dayWidth / 2)) - (barWidth * 3),\n\t\t\t\t\t\t\t\tbarX = xLeft + (barWidth * weightIndex),\n\t\t\t\t\t\t\t\tbarHeight = (weight * graphSize.weightHeight) / bars.weight.maxValue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn \"M\" + barX + \",\" + graphSize.barY + \n\t\t\t\t\t\t\t\t\" L\" + (barX + barWidth) + \",\" + graphSize.barY + \n\t\t\t\t\t\t\t\t\" L\" + (barX + barWidth) + \",\" + (graphSize.barY + barHeight) + \n\t\t\t\t\t\t\t\t\" C\" + (barX + barWidth) + \",\" + (graphSize.barY + barHeight + 8) + \" \" + barX + \",\" + (graphSize.barY + barHeight + 8) + \" \" + barX + \",\" + (graphSize.barY + barHeight);\n\t\t\t\t\t\t})\n\t\t\t\t\t})).flatMap(day => day.weights);\n\t\t\t\t\t\n\t\t\t\t\tbars.reps = {};\n\t\t\t\t\tbars.reps.minValue = Math.min(...workoutSet.graph.days.flatMap(day => day.setReps));\n\t\t\t\t\tbars.reps.maxValue = Math.max(...workoutSet.graph.days.flatMap(day => day.setReps));\n\t\t\t\t\tbars.reps.valueHeight = bars.reps.maxValue - bars.reps.minValue;\n\t\t\t\t\t\n\t\t\t\t\tconst repBars = workoutSet.graph.days.map((day, dayIndex) => ({\n\t\t\t\t\t\treps: day.setReps.map((rep, repIndex) => {\n\t\t\t\t\t\t\tconst xLeft = ((dayWidth * dayIndex) + (dayWidth / 2)) - (barWidth * 3),\n\t\t\t\t\t\t\t\tbarX = xLeft + (barWidth * repIndex),\n\t\t\t\t\t\t\t\tbarHeight = (rep * graphSize.repHeight) / bars.reps.maxValue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn \"M\" + barX + \",\" + graphSize.barY + \n\t\t\t\t\t\t\t\t(workoutSet.exercise.hasWeight ?\n\t\t\t\t\t\t\t\t\t\" L\" + (barX + barWidth) + \",\" + graphSize.barY\n\t\t\t\t\t\t\t\t\t: \" C\" + barX + \",\" + (graphSize.barY + 3) + \" \" + (barX + barWidth) + \",\" + (graphSize.barY + 3) + \" \" + (barX + barWidth) + \",\" + graphSize.barY\n\t\t\t\t\t\t\t\t\t)+ \n\t\t\t\t\t\t\t\t\" L\" + (barX + barWidth) + \",\" + (graphSize.barY - barHeight) + \n\t\t\t\t\t\t\t\t\" C\" + (barX + barWidth) + \",\" + (graphSize.barY - barHeight - 3) + \" \" + barX + \",\" + (graphSize.barY - barHeight - 3) + \" \" + barX + \",\" + (graphSize.barY -barHeight);\n\t\t\t\t\t\t})\n\t\t\t\t\t})).flatMap(day => day.reps);\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...workoutSet,\n\t\t\t\t\t\tgraph: {\n\t\t\t\t\t\t\t...workoutSet.graph,\n\t\t\t\t\t\t\tweightBars: workoutSet.exercise.hasWeight ? weightBars : [],\n\t\t\t\t\t\t\trepBars: repBars,\n\t\t\t\t\t\t\toneRepMaxPath: workoutSet.exercise.hasWeight ? oneRepMaxPath : \"\",\n\t\t\t\t\t\t\toneRepMaxPathFill: workoutSet.exercise.hasWeight ? oneRepMaxPath + \" L\" + graphSize.width + \",\" + graphSize.height + \" L0,\" + graphSize.height : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tworkout: workout,\n\t\t\t\t\tisLoading: false\n\t\t\t\t});\n\t\t\t});\n\t}\n\t\n\tcompleteSet = setIndex => event => {\n\t\tthis.setState(({workout}) => ({\n\t\t\tworkout: {\n\t\t\t\t...workout,\n\t\t\t\tsets: [\n\t\t\t\t\t...workout.sets.slice(0, setIndex),\n\t\t\t\t\t{\n\t\t\t\t\t\t...workout.sets[setIndex],\n\t\t\t\t\t\tisComplete: true\n\t\t\t\t\t},\n\t\t\t\t\t...workout.sets.slice(setIndex + 1)\n\t\t\t\t\t]\n\t\t\t}\n\t\t}));\n\t}\n\t\n\teditReps = (setIndex, newReps) => {\n\t\tthis.setState(({workout}) => ({\n\t\t\tworkout: {\n\t\t\t\t...workout,\n\t\t\t\tsets: [\n\t\t\t\t\t...workout.sets.slice(0, setIndex),\n\t\t\t\t\t{\n\t\t\t\t\t\t...workout.sets[setIndex],\n\t\t\t\t\t\treps: newReps\n\t\t\t\t\t},\n\t\t\t\t\t...workout.sets.slice(setIndex + 1)\n\t\t\t\t]\n\t\t\t}\n\t\t}));\n\t}\n\t\n\teditWeight = (setIndex, weight) => {\n\t\tconst newTotal = this.state.workout.sets[setIndex].weight + (this.state.workout.sets[setIndex][\"has\" + weight] ? (weight * 2) * -1 : weight * 2);\n\t\t\n\t\tthis.setState(({workout}) => ({\n\t\t\tworkout: {\n\t\t\t\t...workout,\n\t\t\t\tsets: [\n\t\t\t\t\t...workout.sets.slice(0, setIndex),\n\t\t\t\t\t{\n\t\t\t\t\t\t...workout.sets[setIndex],\n\t\t\t\t\t\t...this.getWeights(newTotal, workout.sets[setIndex].exercise),\n\t\t\t\t\t\tweight: newTotal\n\t\t\t\t\t},\n\t\t\t\t\t...workout.sets.slice(setIndex + 1)\n\t\t\t\t]\n\t\t\t}\n\t\t}));\n\t}\n\t\n\tgetWeights = (totalWeight, exercise) => {\n\t\tlet weights = {};\n\t\t\n\t\ttotalWeight -= exercise.hasBar ? 45 : 0;\n\t\t\n\t\tweights.has45 = totalWeight >= 45 * 2;\n\t\ttotalWeight -= totalWeight >= 45 * 2 ? 45 * 2 : 0;\n\t\t\n\t\tweights.has25 = totalWeight >= 25 * 2;\n\t\ttotalWeight -= totalWeight >= 25 * 2 ? 25 * 2 : 0;\n\t\t\n\t\tweights.has10 = totalWeight >= 10 * 2;\n\t\ttotalWeight -= totalWeight >= 10 * 2 ? 10 * 2 : 0;\n\t\t\n\t\tweights.has5 = totalWeight >= 5 * 2;\n\t\ttotalWeight -= totalWeight >= 5 * 2 ? 5 * 2 : 0;\n\t\t\n\t\tweights[\"has2.5\"] = totalWeight >= 2.5 * 2;\n\t\ttotalWeight -= totalWeight >= 2.5 * 2 ? 2.5 * 2 : 0;\n\t\t\n\t\treturn weights;\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page\">\n\t\t\t{\n\t\t\tthis.state.isLoading ?\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<img alt=\"Loading\" src={loadingImage} />\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<h1>Workout { this.state.workout.name }</h1>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"setsContainer\">\t\n\t\t\t\t\t{\n\t\t\t\t\tthis.state.workout.sets.map((workoutSet, setIndex) => (\n\t\t\t\t\t\t<div key={setIndex} style={{ display: \"flex\" }}>\n\t\t\t\t\t\t\t<div className=\"setContainer\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"setHeader\">\n\t\t\t\t\t\t\t\t\t<div className=\"setNameContainer\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"header\">{ workoutSet.exercise.name }</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"subHeader\">{ workoutSet.exercise.category }</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"setNumberContainer\">\n\t\t\t\t\t\t\t\t\t\t<div>{ setIndex + 1 }</div>\n\t\t\t\t\t\t\t\t\t\t<div>{ this.state.workout.sets.length }</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"setDataContainer\">\n\t\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"dataButton\" onClick={ () => this.editReps(setIndex, workoutSet.reps - 1) }>-</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"dataValue\">{ workoutSet.reps }</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"dataButton\" onClick={ () => this.editReps(setIndex, workoutSet.reps + 1) }>+</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tworkoutSet.exercise.hasWeight ? \n\t\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has2.5\"] ? \"active\" : \"\" }`} onClick={ () => this.editWeight(setIndex, 2.5) }>2.5</div>\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has5\"] ? \"active\" : \"\" }`} onClick={ () => this.editWeight(setIndex, 5) }>5</div>\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has10\"] ? \"active\" : \"\" }`} onClick={ () => this.editWeight(setIndex, 10) }>10</div>\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has25\"] ? \"active\" : \"\" }`}>25</div>\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has35\"] ? \"active\" : \"\" }`}>35</div>\n\t\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has45\"] ? \"active\" : \"\" }`}>45</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tworkoutSet.exercise.hasWeight ?\n\t\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"subHeader\">{ workoutSet.weight } lbs</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"graphContainer\">\n\t\t\t\t\t\t\t\t\t<svg viewBox=\"0 0 350 200\" className=\"workoutGraph\">\n\t\t\t\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t\t\t<linearGradient spreadMethod=\"pad\" id=\"oneRepMaxGradient\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\n\t\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0%\" style={{stopColor: \"rgb(255, 255, 255)\", stopOpacity: 1}} />\n\t\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"100%\" style={{stopColor: \"rgb(202 236 251)\", stopOpacity: 1}} />\n\t\t\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t\t<path className=\"stroke\" d={ workoutSet.graph.oneRepMaxPath } />\n\t\t\t\t\t\t\t\t\t\t\t<path className=\"fill\" d={ workoutSet.graph.oneRepMaxPathFill } fill=\"url(#oneRepMaxGradient)\" />\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tworkoutSet.graph.weightBars.map((path, barIndex) => (\n\t\t\t\t\t\t\t\t\t\t\t<path key={ barIndex } className=\"weightBar\" d={ path } />\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tworkoutSet.graph.repBars.map((path, barIndex) => (\n\t\t\t\t\t\t\t\t\t\t\t<path key={ barIndex } className=\"repBar\" d={ path } />\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"actionContainer\">\n\t\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"addButton\">\n\t\t\t\t\t\t\t\t<div>+</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutActivity;\n"]},"metadata":{},"sourceType":"module"}