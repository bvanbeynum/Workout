{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bvanbeynum/workout/client/src/components/WorkoutActivity.jsx\";\n// eslint-disable-next-line\n\n/* global fetch */\nimport React from \"react\";\nimport \"./workoutactivity.css\";\nimport loadingImage from \"../media/loading.gif\";\n\nclass WorkoutActivity extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeights = (totalWeight, exercise) => {\n      let weights = {};\n      totalWeight -= exercise.hasBar ? 45 : 0;\n      weights.has45 = totalWeight >= 45 * 2;\n      totalWeight -= totalWeight >= 45 * 2 ? 45 * 2 : 0;\n      weights.has25 = totalWeight >= 25 * 2;\n      totalWeight -= totalWeight >= 25 * 2 ? 25 * 2 : 0;\n      weights.has10 = totalWeight >= 10 * 2;\n      totalWeight -= totalWeight >= 10 * 2 ? 10 * 2 : 0;\n      weights.has5 = totalWeight >= 5 * 2;\n      totalWeight -= totalWeight >= 5 * 2 ? 5 * 2 : 0;\n      weights[\"has2.5\"] = totalWeight >= 2.5 * 2;\n      totalWeight -= totalWeight >= 2.5 * 2 ? 2.5 * 2 : 0;\n      return weights;\n    };\n\n    this.state = {\n      isLoading: true,\n      workout: {\n        id: this.props.workoutId\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://workout.beynum.com/workout/api/activityload?id=\" + this.state.workout.id, {\n      credentials: \"include\"\n    }).then(response => response.json()).then(data => {\n      const workout = data.workout;\n      workout.sets = workout.sets.map(workoutSet => {\n        const graphDates = [...new Set(workoutSet.exercise.activities.map(activity => +new Date(activity.runDateOnly)))];\n        return { ...workoutSet,\n          ...this.getWeights(workoutSet.exercise.maxWeight, workoutSet.exercise),\n          graph: {\n            days: graphDates.map((date, dateIndex) => ({\n              date: new Date(date).getMonth() + 1 + \"/\" + new Date(date).getDate(),\n              oneRepMax: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.oneRepMax).sort((activityA, activityB) => activityB - activityA)[0],\n              setWeights: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.weight),\n              setReps: workoutSet.exercise.activities.filter(activity => +new Date(activity.runDateOnly) === date).map(activity => activity.reps)\n            }))\n          }\n        };\n      });\n      workout.sets = workout.sets.map(workoutSet => {\n        if (!workoutSet.exercise.hasWeight) {\n          return workoutSet;\n        }\n\n        const graphSize = {\n          width: 350,\n          height: 200,\n          weightHeight: 110,\n          repHeight: 50\n        },\n              minValue = Math.min(...workoutSet.graph.days.map(date => date.oneRepMax)),\n              maxValue = Math.max(...workoutSet.graph.days.map(date => date.oneRepMax)),\n              minGraph = minValue - minValue * .2,\n              maxGraph = maxValue + maxValue * .05,\n              valueHeight = maxGraph - minGraph,\n              xWidth = graphSize.width / workoutSet.graph.days.length,\n              barWidth = 5;\n        const oneRepMaxPath = workoutSet.graph.days.map((day, dayIndex) => {\n          const pointX = xWidth * dayIndex,\n                pointY = (maxGraph - day.oneRepMax) * graphSize.height / valueHeight;\n          let path = \"\";\n\n          if (dayIndex === 0) {\n            path = \"M0,\";\n          } else if (dayIndex === workoutSet.graph.days.length - 1) {\n            path = \"L\" + graphSize.width + \",\";\n          } else {\n            path = \"L\" + (pointX + xWidth / 2) + \",\";\n          }\n\n          path += pointY;\n          return path;\n        }).join(\" \");\n        const weightBars = workoutSet.graph.days.map((day, dayIndex) => ({\n          weights: day.setWeights.map((weight, weightIndex) => ({\n            x: xWidth * dayIndex + xWidth / 2,\n            width: barWidth\n          }))\n        }));\n        return { ...workoutSet,\n          graph: { ...workoutSet.graph,\n            weightBars: weightBars,\n            oneRepMaxPath: oneRepMaxPath,\n            oneRepMaxPathFill: oneRepMaxPath + \" L\" + graphSize.width + \",\" + graphSize.height + \" L0,\" + graphSize.height\n          }\n        };\n      });\n      this.setState({\n        workout: workout,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Loading\",\n          src: loadingImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Workout \", this.state.workout.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setsContainer\",\n          children: this.state.workout.sets.map((workoutSet, setIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setNameContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"header\",\n                  children: workoutSet.exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subHeader\",\n                  children: workoutSet.exercise.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setNumberContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: setIndex + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: this.state.workout.sets.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setDataContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"horizontalContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dataButton\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dataValue\",\n                  children: workoutSet.exercise.maxReps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dataButton\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 9\n              }, this), workoutSet.exercise.hasWeight ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"horizontalContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has2.5\"] ? \"active\" : \"\"}`,\n                  children: \"2.5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has5\"] ? \"active\" : \"\"}`,\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has10\"] ? \"active\" : \"\"}`,\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has25\"] ? \"active\" : \"\"}`,\n                  children: \"25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has35\"] ? \"active\" : \"\"}`,\n                  children: \"35\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `weightButton ${workoutSet[\"has45\"] ? \"active\" : \"\"}`,\n                  children: \"45\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 9\n              }, this) : \"\", workoutSet.exercise.hasWeight ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"horizontalContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"subHeader\",\n                  children: [workoutSet.exercise.maxWeight, \" lbs\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 9\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"graphContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 350 200\",\n                className: \"workoutGraph\",\n                children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                  children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                    spreadMethod: \"pad\",\n                    id: \"oneRepMaxGradient\",\n                    x1: \"0%\",\n                    y1: \"100%\",\n                    x2: \"0%\",\n                    y2: \"0%\",\n                    children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"0%\",\n                      style: {\n                        stopColor: \"rgb(255, 255, 255)\",\n                        stopOpacity: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"100%\",\n                      style: {\n                        stopColor: \"rgb(251, 216, 223)\",\n                        stopOpacity: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"stroke\",\n                  d: workoutSet.graph.oneRepMaxPath\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"fill\",\n                  d: workoutSet.graph.oneRepMaxPathFill,\n                  fill: \"url(#oneRepMaxGradient)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actionContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setActionButton\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setActionButton\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M8 5v14l11-7z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setActionButton\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 8\n            }, this)]\n          }, setIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default WorkoutActivity;","map":{"version":3,"sources":["/home/bvanbeynum/workout/client/src/components/WorkoutActivity.jsx"],"names":["React","loadingImage","WorkoutActivity","Component","constructor","props","getWeights","totalWeight","exercise","weights","hasBar","has45","has25","has10","has5","state","isLoading","workout","id","workoutId","componentDidMount","fetch","credentials","then","response","json","data","sets","map","workoutSet","graphDates","Set","activities","activity","Date","runDateOnly","maxWeight","graph","days","date","dateIndex","getMonth","getDate","oneRepMax","filter","sort","activityA","activityB","setWeights","weight","setReps","reps","hasWeight","graphSize","width","height","weightHeight","repHeight","minValue","Math","min","maxValue","max","minGraph","maxGraph","valueHeight","xWidth","length","barWidth","oneRepMaxPath","day","dayIndex","pointX","pointY","path","join","weightBars","weightIndex","x","oneRepMaxPathFill","setState","render","name","setIndex","category","maxReps","stopColor","stopOpacity"],"mappings":";;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAqGnBC,UArGmB,GAqGN,CAACC,WAAD,EAAcC,QAAd,KAA2B;AACvC,UAAIC,OAAO,GAAG,EAAd;AAEAF,MAAAA,WAAW,IAAIC,QAAQ,CAACE,MAAT,GAAkB,EAAlB,GAAuB,CAAtC;AAEAD,MAAAA,OAAO,CAACE,KAAR,GAAgBJ,WAAW,IAAI,KAAK,CAApC;AACAA,MAAAA,WAAW,IAAIA,WAAW,IAAI,KAAK,CAApB,GAAwB,KAAK,CAA7B,GAAiC,CAAhD;AAEAE,MAAAA,OAAO,CAACG,KAAR,GAAgBL,WAAW,IAAI,KAAK,CAApC;AACAA,MAAAA,WAAW,IAAIA,WAAW,IAAI,KAAK,CAApB,GAAwB,KAAK,CAA7B,GAAiC,CAAhD;AAEAE,MAAAA,OAAO,CAACI,KAAR,GAAgBN,WAAW,IAAI,KAAK,CAApC;AACAA,MAAAA,WAAW,IAAIA,WAAW,IAAI,KAAK,CAApB,GAAwB,KAAK,CAA7B,GAAiC,CAAhD;AAEAE,MAAAA,OAAO,CAACK,IAAR,GAAeP,WAAW,IAAI,IAAI,CAAlC;AACAA,MAAAA,WAAW,IAAIA,WAAW,IAAI,IAAI,CAAnB,GAAuB,IAAI,CAA3B,GAA+B,CAA9C;AAEAE,MAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBF,WAAW,IAAI,MAAM,CAAzC;AACAA,MAAAA,WAAW,IAAIA,WAAW,IAAI,MAAM,CAArB,GAAyB,MAAM,CAA/B,GAAmC,CAAlD;AAEA,aAAOE,OAAP;AACA,KA1HkB;;AAGlB,SAAKM,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,IADC;AAEZC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAKb,KAAL,CAAWc;AAAjB;AAFG,KAAb;AAIA;;AAEDC,EAAAA,iBAAiB,GAAG;AAEnBC,IAAAA,KAAK,CAAC,2DAA2D,KAAKN,KAAL,CAAWE,OAAX,CAAmBC,EAA/E,EAAmF;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAAnF,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAI;AACb,YAAMT,OAAO,GAAGS,IAAI,CAACT,OAArB;AAEAA,MAAAA,OAAO,CAACU,IAAR,GAAeV,OAAO,CAACU,IAAR,CAAaC,GAAb,CAAiBC,UAAU,IAAI;AAC7C,cAAMC,UAAU,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,UAAU,CAACrB,QAAX,CAAoBwB,UAApB,CAA+BJ,GAA/B,CAAmCK,QAAQ,IAAI,CAAE,IAAIC,IAAJ,CAASD,QAAQ,CAACE,WAAlB,CAAjD,CAAR,CAAJ,CAAnB;AAEA,eAAO,EACN,GAAGN,UADG;AAEN,aAAG,KAAKvB,UAAL,CAAgBuB,UAAU,CAACrB,QAAX,CAAoB4B,SAApC,EAA+CP,UAAU,CAACrB,QAA1D,CAFG;AAGN6B,UAAAA,KAAK,EAAE;AACNC,YAAAA,IAAI,EAAER,UAAU,CAACF,GAAX,CAAe,CAACW,IAAD,EAAOC,SAAP,MAAsB;AAC1CD,cAAAA,IAAI,EAAI,IAAIL,IAAJ,CAASK,IAAT,CAAD,CAAiBE,QAAjB,KAA8B,CAA/B,GAAoC,GAApC,GAA2C,IAAIP,IAAJ,CAASK,IAAT,CAAD,CAAiBG,OAAjB,EADN;AAE1CC,cAAAA,SAAS,EAAEd,UAAU,CAACrB,QAAX,CAAoBwB,UAApB,CACTY,MADS,CACFX,QAAQ,IAAI,CAAE,IAAIC,IAAJ,CAASD,QAAQ,CAACE,WAAlB,CAAF,KAAsCI,IADhD,EAETX,GAFS,CAELK,QAAQ,IAAIA,QAAQ,CAACU,SAFhB,EAGTE,IAHS,CAGJ,CAACC,SAAD,EAAYC,SAAZ,KAA0BA,SAAS,GAAGD,SAHlC,EAG6C,CAH7C,CAF+B;AAM1CE,cAAAA,UAAU,EAAEnB,UAAU,CAACrB,QAAX,CAAoBwB,UAApB,CACVY,MADU,CACHX,QAAQ,IAAI,CAAE,IAAIC,IAAJ,CAASD,QAAQ,CAACE,WAAlB,CAAF,KAAsCI,IAD/C,EAEVX,GAFU,CAENK,QAAQ,IAAIA,QAAQ,CAACgB,MAFf,CAN8B;AAS1CC,cAAAA,OAAO,EAAErB,UAAU,CAACrB,QAAX,CAAoBwB,UAApB,CACPY,MADO,CACAX,QAAQ,IAAI,CAAE,IAAIC,IAAJ,CAASD,QAAQ,CAACE,WAAlB,CAAF,KAAsCI,IADlD,EAEPX,GAFO,CAEHK,QAAQ,IAAIA,QAAQ,CAACkB,IAFlB;AATiC,aAAtB,CAAf;AADA;AAHD,SAAP;AAmBA,OAtBc,CAAf;AAwBAlC,MAAAA,OAAO,CAACU,IAAR,GAAeV,OAAO,CAACU,IAAR,CAAaC,GAAb,CAAiBC,UAAU,IAAI;AAC7C,YAAI,CAACA,UAAU,CAACrB,QAAX,CAAoB4C,SAAzB,EAAoC;AACnC,iBAAOvB,UAAP;AACA;;AAED,cAAMwB,SAAS,GAAG;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,GAAtB;AAA2BC,UAAAA,YAAY,EAAE,GAAzC;AAA8CC,UAAAA,SAAS,EAAE;AAAzD,SAAlB;AAAA,cACCC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAG/B,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsBV,GAAtB,CAA0BW,IAAI,IAAIA,IAAI,CAACI,SAAvC,CAAZ,CADZ;AAAA,cAECkB,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAAS,GAAGjC,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsBV,GAAtB,CAA0BW,IAAI,IAAIA,IAAI,CAACI,SAAvC,CAAZ,CAFZ;AAAA,cAGCoB,QAAQ,GAAGL,QAAQ,GAAIA,QAAQ,GAAG,EAHnC;AAAA,cAICM,QAAQ,GAAGH,QAAQ,GAAIA,QAAQ,GAAG,GAJnC;AAAA,cAKCI,WAAW,GAAGD,QAAQ,GAAGD,QAL1B;AAAA,cAMCG,MAAM,GAAGb,SAAS,CAACC,KAAV,GAAkBzB,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsB6B,MANlD;AAAA,cAOCC,QAAQ,GAAG,CAPZ;AASA,cAAMC,aAAa,GAAGxC,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsBV,GAAtB,CAA0B,CAAC0C,GAAD,EAAMC,QAAN,KAAmB;AAClE,gBAAMC,MAAM,GAAIN,MAAM,GAAGK,QAAzB;AAAA,gBACCE,MAAM,GAAI,CAACT,QAAQ,GAAGM,GAAG,CAAC3B,SAAhB,IAA6BU,SAAS,CAACE,MAAxC,GAAkDU,WAD5D;AAGA,cAAIS,IAAI,GAAG,EAAX;;AAEA,cAAIH,QAAQ,KAAK,CAAjB,EAAoB;AACnBG,YAAAA,IAAI,GAAG,KAAP;AACA,WAFD,MAGK,IAAIH,QAAQ,KAAK1C,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsB6B,MAAtB,GAA+B,CAAhD,EAAmD;AACvDO,YAAAA,IAAI,GAAG,MAAMrB,SAAS,CAACC,KAAhB,GAAwB,GAA/B;AACA,WAFI,MAGA;AACJoB,YAAAA,IAAI,GAAG,OAAOF,MAAM,GAAIN,MAAM,GAAG,CAA1B,IAAgC,GAAvC;AACA;;AAEDQ,UAAAA,IAAI,IAAID,MAAR;AAEA,iBAAOC,IAAP;AAEC,SApBoB,EAoBlBC,IApBkB,CAoBb,GApBa,CAAtB;AAsBA,cAAMC,UAAU,GAAG/C,UAAU,CAACQ,KAAX,CAAiBC,IAAjB,CAAsBV,GAAtB,CAA0B,CAAC0C,GAAD,EAAMC,QAAN,MAAoB;AAChE9D,UAAAA,OAAO,EAAE6D,GAAG,CAACtB,UAAJ,CAAepB,GAAf,CAAmB,CAACqB,MAAD,EAAS4B,WAAT,MAA0B;AACpDC,YAAAA,CAAC,EAAGZ,MAAM,GAAGK,QAAV,GAAuBL,MAAM,GAAG,CADiB;AAEpDZ,YAAAA,KAAK,EAAEc;AAF6C,WAA1B,CAAnB;AADuD,SAApB,CAA1B,CAAnB;AAOA,eAAO,EACN,GAAGvC,UADG;AAENQ,UAAAA,KAAK,EAAE,EACN,GAAGR,UAAU,CAACQ,KADR;AAENuC,YAAAA,UAAU,EAAEA,UAFN;AAGNP,YAAAA,aAAa,EAAEA,aAHT;AAINU,YAAAA,iBAAiB,EAAEV,aAAa,GAAG,IAAhB,GAAuBhB,SAAS,CAACC,KAAjC,GAAyC,GAAzC,GAA+CD,SAAS,CAACE,MAAzD,GAAkE,MAAlE,GAA2EF,SAAS,CAACE;AAJlG;AAFD,SAAP;AASA,OApDc,CAAf;AAsDA,WAAKyB,QAAL,CAAc;AACb/D,QAAAA,OAAO,EAAEA,OADI;AAEbD,QAAAA,SAAS,EAAE;AAFE,OAAd;AAIA,KAvFF;AAwFA;;AAyBDiE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAEA,KAAKlE,KAAL,CAAWC,SAAX,gBACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACC;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,GAAG,EAAEf;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC;AAAA,iCAAc,KAAKc,KAAL,CAAWE,OAAX,CAAmBiE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEA,KAAKnE,KAAL,CAAWE,OAAX,CAAmBU,IAAnB,CAAwBC,GAAxB,CAA4B,CAACC,UAAD,EAAasD,QAAb,kBAC3B;AAAoB,YAAA,SAAS,EAAC,cAA9B;AAAA,oCAEC;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,wCACC;AAAK,kBAAA,SAAS,EAAC,QAAf;AAAA,4BAA0BtD,UAAU,CAACrB,QAAX,CAAoB0E;AAA9C;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,4BAA6BrD,UAAU,CAACrB,QAAX,CAAoB4E;AAAjD;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAMC;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACC;AAAA,4BAAOD,QAAQ,GAAG;AAAlB;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC;AAAA,4BAAO,KAAKpE,KAAL,CAAWE,OAAX,CAAmBU,IAAnB,CAAwBwC;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAND;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,eAcC;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACC;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,4BAA6BtC,UAAU,CAACrB,QAAX,CAAoB6E;AAAjD;AAAA;AAAA;AAAA;AAAA,wBAFD,eAGC;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAOCxD,UAAU,CAACrB,QAAX,CAAoB4C,SAApB,gBACA;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACC;AAAK,kBAAA,SAAS,EAAG,gBAAgBvB,UAAU,CAAC,QAAD,CAAV,GAAuB,QAAvB,GAAkC,EAAI,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC;AAAK,kBAAA,SAAS,EAAG,gBAAgBA,UAAU,CAAC,MAAD,CAAV,GAAqB,QAArB,GAAgC,EAAI,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD,eAGC;AAAK,kBAAA,SAAS,EAAG,gBAAgBA,UAAU,CAAC,OAAD,CAAV,GAAsB,QAAtB,GAAiC,EAAI,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHD,eAIC;AAAK,kBAAA,SAAS,EAAG,gBAAgBA,UAAU,CAAC,OAAD,CAAV,GAAsB,QAAtB,GAAiC,EAAI,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJD,eAKC;AAAK,kBAAA,SAAS,EAAG,gBAAgBA,UAAU,CAAC,OAAD,CAAV,GAAsB,QAAtB,GAAiC,EAAI,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALD,eAMC;AAAK,kBAAA,SAAS,EAAG,gBAAgBA,UAAU,CAAC,OAAD,CAAV,GAAsB,QAAtB,GAAiC,EAAI,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAND;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,GASE,EAhBH,EAmBCA,UAAU,CAACrB,QAAX,CAAoB4C,SAApB,gBACA;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,uCACC;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,6BAA6BvB,UAAU,CAACrB,QAAX,CAAoB4B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADA,GAIE,EAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdD,eAyCC;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,qCACC;AAAK,gBAAA,OAAO,EAAC,aAAb;AAA2B,gBAAA,SAAS,EAAC,cAArC;AAAA,wCACC;AAAA,yCACC;AAAgB,oBAAA,YAAY,EAAC,KAA7B;AAAmC,oBAAA,EAAE,EAAC,mBAAtC;AAA0D,oBAAA,EAAE,EAAC,IAA7D;AAAkE,oBAAA,EAAE,EAAC,MAArE;AAA4E,oBAAA,EAAE,EAAC,IAA/E;AAAoF,oBAAA,EAAE,EAAC,IAAvF;AAAA,4CACC;AAAM,sBAAA,MAAM,EAAC,IAAb;AAAkB,sBAAA,KAAK,EAAE;AAACkD,wBAAAA,SAAS,EAAE,oBAAZ;AAAkCC,wBAAAA,WAAW,EAAE;AAA/C;AAAzB;AAAA;AAAA;AAAA;AAAA,4BADD,eAEC;AAAM,sBAAA,MAAM,EAAC,MAAb;AAAoB,sBAAA,KAAK,EAAE;AAACD,wBAAAA,SAAS,EAAE,oBAAZ;AAAkCC,wBAAAA,WAAW,EAAE;AAA/C;AAA3B;AAAA;AAAA;AAAA;AAAA,4BAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,wBADD,eAQC;AAAM,kBAAA,SAAS,EAAC,QAAhB;AAAyB,kBAAA,CAAC,EAAG1D,UAAU,CAACQ,KAAX,CAAiBgC;AAA9C;AAAA;AAAA;AAAA;AAAA,wBARD,eASC;AAAM,kBAAA,SAAS,EAAC,MAAhB;AAAuB,kBAAA,CAAC,EAAGxC,UAAU,CAACQ,KAAX,CAAiB0C,iBAA5C;AAAgE,kBAAA,IAAI,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,wBATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAzCD,eAuDC;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACC;AAAK,kBAAA,KAAK,EAAC,4BAAX;AAAwC,kBAAA,OAAO,EAAC,WAAhD;AAAA,yCACC;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAOC;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACC;AAAK,kBAAA,KAAK,EAAC,4BAAX;AAAwC,kBAAA,OAAO,EAAC,WAAhD;AAAA,yCACC;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBAPD,eAaC;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACC;AAAK,kBAAA,KAAK,EAAC,4BAAX;AAAwC,kBAAA,OAAO,EAAC,WAAhD;AAAA,yCACC;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvDD;AAAA,aAAUI,QAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AAFA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AARD;AAAA;AAAA;AAAA;AAAA,YADD;AAkGA;;AAhO4C;;AAmO9C,eAAejF,eAAf","sourcesContent":["// eslint-disable-next-line\n/* global fetch */\n\nimport React from \"react\";\nimport \"./workoutactivity.css\";\nimport loadingImage from \"../media/loading.gif\";\n\nclass WorkoutActivity extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tworkout: { id: this.props.workoutId }\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\t\n\t\tfetch(\"http://workout.beynum.com/workout/api/activityload?id=\" + this.state.workout.id, { credentials: \"include\" })\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst workout = data.workout;\n\t\t\t\t\n\t\t\t\tworkout.sets = workout.sets.map(workoutSet => {\n\t\t\t\t\tconst graphDates = [...new Set(workoutSet.exercise.activities.map(activity => +(new Date(activity.runDateOnly))))];\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...workoutSet,\n\t\t\t\t\t\t...this.getWeights(workoutSet.exercise.maxWeight, workoutSet.exercise),\n\t\t\t\t\t\tgraph: {\n\t\t\t\t\t\t\tdays: graphDates.map((date, dateIndex) => ({\n\t\t\t\t\t\t\t\tdate: ((new Date(date)).getMonth() + 1) + \"/\" + (new Date(date)).getDate(),\n\t\t\t\t\t\t\t\toneRepMax: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.oneRepMax)\n\t\t\t\t\t\t\t\t\t.sort((activityA, activityB) => activityB - activityA)[0],\n\t\t\t\t\t\t\t\tsetWeights: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.weight),\n\t\t\t\t\t\t\t\tsetReps: workoutSet.exercise.activities\n\t\t\t\t\t\t\t\t\t.filter(activity => +(new Date(activity.runDateOnly)) === date)\n\t\t\t\t\t\t\t\t\t.map(activity => activity.reps)\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tworkout.sets = workout.sets.map(workoutSet => {\n\t\t\t\t\tif (!workoutSet.exercise.hasWeight) {\n\t\t\t\t\t\treturn workoutSet;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst graphSize = { width: 350, height: 200, weightHeight: 110, repHeight: 50 },\n\t\t\t\t\t\tminValue = Math.min(...workoutSet.graph.days.map(date => date.oneRepMax)),\n\t\t\t\t\t\tmaxValue = Math.max(...workoutSet.graph.days.map(date => date.oneRepMax)),\n\t\t\t\t\t\tminGraph = minValue - (minValue * .2),\n\t\t\t\t\t\tmaxGraph = maxValue + (maxValue * .05),\n\t\t\t\t\t\tvalueHeight = maxGraph - minGraph,\n\t\t\t\t\t\txWidth = graphSize.width / workoutSet.graph.days.length,\n\t\t\t\t\t\tbarWidth = 5;\n\t\t\t\t\t\n\t\t\t\t\tconst oneRepMaxPath = workoutSet.graph.days.map((day, dayIndex) => {\n\t\t\t\t\t\tconst pointX = (xWidth * dayIndex),\n\t\t\t\t\t\t\tpointY = ((maxGraph - day.oneRepMax) * graphSize.height) / valueHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet path = \"\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (dayIndex === 0) {\n\t\t\t\t\t\t\tpath = \"M0,\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (dayIndex === workoutSet.graph.days.length - 1) {\n\t\t\t\t\t\t\tpath = \"L\" + graphSize.width + \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpath = \"L\" + (pointX + (xWidth / 2)) + \",\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tpath += pointY;\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}).join(\" \");\n\t\t\t\t\t\n\t\t\t\t\tconst weightBars = workoutSet.graph.days.map((day, dayIndex) => ({\n\t\t\t\t\t\tweights: day.setWeights.map((weight, weightIndex) => ({\n\t\t\t\t\t\t\t\tx: (xWidth * dayIndex) + (xWidth / 2),\n\t\t\t\t\t\t\t\twidth: barWidth\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t}));\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...workoutSet,\n\t\t\t\t\t\tgraph: {\n\t\t\t\t\t\t\t...workoutSet.graph,\n\t\t\t\t\t\t\tweightBars: weightBars,\n\t\t\t\t\t\t\toneRepMaxPath: oneRepMaxPath,\n\t\t\t\t\t\t\toneRepMaxPathFill: oneRepMaxPath + \" L\" + graphSize.width + \",\" + graphSize.height + \" L0,\" + graphSize.height\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tworkout: workout,\n\t\t\t\t\tisLoading: false\n\t\t\t\t});\n\t\t\t});\n\t}\n\t\n\tgetWeights = (totalWeight, exercise) => {\n\t\tlet weights = {};\n\t\t\n\t\ttotalWeight -= exercise.hasBar ? 45 : 0;\n\t\t\n\t\tweights.has45 = totalWeight >= 45 * 2;\n\t\ttotalWeight -= totalWeight >= 45 * 2 ? 45 * 2 : 0;\n\t\t\n\t\tweights.has25 = totalWeight >= 25 * 2;\n\t\ttotalWeight -= totalWeight >= 25 * 2 ? 25 * 2 : 0;\n\t\t\n\t\tweights.has10 = totalWeight >= 10 * 2;\n\t\ttotalWeight -= totalWeight >= 10 * 2 ? 10 * 2 : 0;\n\t\t\n\t\tweights.has5 = totalWeight >= 5 * 2;\n\t\ttotalWeight -= totalWeight >= 5 * 2 ? 5 * 2 : 0;\n\t\t\n\t\tweights[\"has2.5\"] = totalWeight >= 2.5 * 2;\n\t\ttotalWeight -= totalWeight >= 2.5 * 2 ? 2.5 * 2 : 0;\n\t\t\n\t\treturn weights;\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page\">\n\t\t\t{\n\t\t\tthis.state.isLoading ?\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<img alt=\"Loading\" src={loadingImage} />\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<h1>Workout { this.state.workout.name }</h1>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"setsContainer\">\t\n\t\t\t\t\t{\n\t\t\t\t\tthis.state.workout.sets.map((workoutSet, setIndex) => (\n\t\t\t\t\t\t<div key={setIndex} className=\"setContainer\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"setHeader\">\n\t\t\t\t\t\t\t\t<div className=\"setNameContainer\">\n\t\t\t\t\t\t\t\t\t<div className=\"header\">{ workoutSet.exercise.name }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"subHeader\">{ workoutSet.exercise.category }</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"setNumberContainer\">\n\t\t\t\t\t\t\t\t\t<div>{ setIndex + 1 }</div>\n\t\t\t\t\t\t\t\t\t<div>{ this.state.workout.sets.length }</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"setDataContainer\">\n\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t<div className=\"dataButton\">-</div>\n\t\t\t\t\t\t\t\t\t<div className=\"dataValue\">{ workoutSet.exercise.maxReps }</div>\n\t\t\t\t\t\t\t\t\t<div className=\"dataButton\">+</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tworkoutSet.exercise.hasWeight ? \n\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has2.5\"] ? \"active\" : \"\" }`}>2.5</div>\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has5\"] ? \"active\" : \"\" }`}>5</div>\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has10\"] ? \"active\" : \"\" }`}>10</div>\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has25\"] ? \"active\" : \"\" }`}>25</div>\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has35\"] ? \"active\" : \"\" }`}>35</div>\n\t\t\t\t\t\t\t\t\t<div className={`weightButton ${ workoutSet[\"has45\"] ? \"active\" : \"\" }`}>45</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tworkoutSet.exercise.hasWeight ?\n\t\t\t\t\t\t\t\t<div className=\"horizontalContainer\">\n\t\t\t\t\t\t\t\t\t<div className=\"subHeader\">{ workoutSet.exercise.maxWeight } lbs</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"graphContainer\">\n\t\t\t\t\t\t\t\t<svg viewBox=\"0 0 350 200\" className=\"workoutGraph\">\n\t\t\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t\t<linearGradient spreadMethod=\"pad\" id=\"oneRepMaxGradient\" x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0%\" style={{stopColor: \"rgb(255, 255, 255)\", stopOpacity: 1}} />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"100%\" style={{stopColor: \"rgb(251, 216, 223)\", stopOpacity: 1}} />\n\t\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t</defs>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<path className=\"stroke\" d={ workoutSet.graph.oneRepMaxPath } />\n\t\t\t\t\t\t\t\t\t<path className=\"fill\" d={ workoutSet.graph.oneRepMaxPathFill } fill=\"url(#oneRepMaxGradient)\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"actionContainer\">\n\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M8 5v14l11-7z\"/>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"setActionButton\">\n\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WorkoutActivity;\n"]},"metadata":{},"sourceType":"module"}